// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Diomedes Neto",
            "url": "http://www.izap.app",
            "email": "admin@izap.app"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/synthesize": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Converte texto em áudio utilizando a voz especificada",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    " audio/wav"
                ],
                "tags": [
                    "TTS"
                ],
                "summary": "Sintetiza texto em áudio",
                "parameters": [
                    {
                        "type": "string",
                        "default": "base64",
                        "description": "Formato de retorno do áudio (base64 ou binary)",
                        "name": "format",
                        "in": "query"
                    },
                    {
                        "description": "Requisição de síntese",
                        "name": "SynthesizeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SynthesizeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SynthesizeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/voices": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retorna uma lista das vozes disponíveis para síntese",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TTS"
                ],
                "summary": "Lista as vozes disponíveis",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListVoicesResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "erro": {
                    "type": "string"
                }
            }
        },
        "handlers.ListVoicesResponse": {
            "type": "object",
            "properties": {
                "voices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.SynthesizeRequest": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "voice": {
                    "type": "string"
                }
            }
        },
        "handlers.SynthesizeResponse": {
            "type": "object",
            "properties": {
                "audio": {
                    "type": "string"
                },
                "duration": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                },
                "voice": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "GoTTS API",
	Description:      "API para síntese de voz usando Go e Piper",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
